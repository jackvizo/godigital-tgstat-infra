- name: Gather installed package facts
  ansible.builtin.package_facts:
    manager: apt
  become: true
  become_user: root

- name: Install WireGuard and dependencies
  ansible.builtin.apt:
    name:
      - wireguard
      - resolvconf
    state: present
    update_cache: yes
  when: "'wireguard' not in ansible_facts.packages or 'resolvconf' not in ansible_facts.packages"
  become: true
  become_user: root

- name: Ensure /etc/wireguard directory exists
  ansible.builtin.file:
    path: /etc/wireguard
    state: directory
    mode: '0700'
  become: true
  become_user: root

- name: Check if client private key exists
  ansible.builtin.stat:
    path: /etc/wireguard/wireguard_client_private_key
  register: client_private_key_check
  become: true
  become_user: root

- name: Read existing client private key
  ansible.builtin.command:
    cmd: "cat /etc/wireguard/wireguard_client_private_key"
  register: existing_client_private_key
  when: client_private_key_check.stat.exists
  become: true
  become_user: root

- name: Generate client private key
  ansible.builtin.command:
    cmd: "wg genkey"
  register: client_private_key
  when: not client_private_key_check.stat.exists
  become: true
  become_user: root

- name: Save client private key
  ansible.builtin.copy:
    content: "{{ client_private_key.stdout }}"
    dest: /etc/wireguard/wireguard_client_private_key
    mode: '0600'
  when: not client_private_key_check.stat.exists
  become: true
  become_user: root

- name: Generate client public key
  ansible.builtin.command:
    cmd: "echo {{ client_private_key.stdout }} | wg pubkey"
  register: client_public_key
  when: not client_private_key_check.stat.exists
  become: true
  become_user: root

- name: Save client public key
  ansible.builtin.copy:
    content: "{{ client_public_key.stdout }}"
    dest: /etc/wireguard/wireguard_client_public_key
    mode: '0644'
  when: not client_private_key_check.stat.exists
  become: true
  become_user: root

- name: Set wireguard_client_private_key_content
  set_fact:
    wireguard_client_private_key_content: "{{ client_private_key_check.stat.exists | ternary(existing_client_private_key.stdout, client_private_key.stdout) }}"
  become: true
  become_user: root

- name: Ensure WireGuard configuration file exists
  ansible.builtin.template:
    src: templates/wg0-client.conf.j2
    dest: /etc/wireguard/wg0.conf
    mode: '0600'
  become: true
  become_user: root

- name: Bring up WireGuard interface
  ansible.builtin.command: wg-quick up wg0
  become: true
  become_user: root
