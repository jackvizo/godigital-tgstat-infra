- name: Install Nginx
  ansible.builtin.apt:
    name: nginx
    state: present
    update_cache: true

- name: Create Nginx configuration for frontend domain
  ansible.builtin.template:
    src: site.j2
    dest: /etc/nginx/sites-available/{{ frontend_subdomain | default('') ~ (frontend_subdomain | length > 0) | ternary('.', '') }}{{ project_domain }}
  vars:
    subdomain: "{{ frontend_subdomain }}"
    port: "{{ frontend_port }}"
  register: frontend_nginx_config

- name: Create Nginx configuration for graphql domain
  ansible.builtin.template:
    src: graphql.j2
    dest: /etc/nginx/sites-available/{{ graphql_subdomain | default('') ~ (graphql_subdomain | length > 0) | ternary('.', '') }}{{ project_domain }}
  vars:
    subdomain: "{{ graphql_subdomain }}"
    port: "{{ graphql_port }}"
  register: graphql_nginx_config

- name: Create Nginx configuration for sso domain
  ansible.builtin.template:
    src: site.j2
    dest: /etc/nginx/sites-available/{{ sso_subdomain | default('') ~ (sso_subdomain | length > 0) | ternary('.', '') }}{{ project_domain }}
  vars:
    subdomain: "{{ sso_subdomain }}"
    port: "{{ sso_port }}"
  register: sso_nginx_config

- name: Enable Nginx sites
  ansible.builtin.command:
    cmd: ln -s /etc/nginx/sites-available/{{ item }} /etc/nginx/sites-enabled/
  loop:
    - "{{ frontend_subdomain | default('') ~ (frontend_subdomain | length > 0) | ternary('.', '') }}{{ project_domain }}"
    - "{{ graphql_subdomain | default('') ~ (graphql_subdomain | length > 0) | ternary('.', '') }}{{ project_domain }}"
    - "{{ sso_subdomain | default('') ~ (sso_subdomain | length > 0) | ternary('.', '') }}{{ project_domain }}"
  args:
    creates: /etc/nginx/sites-enabled/{{ item }}

- name: Test Nginx configuration
  ansible.builtin.command: nginx -t
  register: nginx_test
  ignore_errors: true

- name: Fail if Nginx configuration is invalid
  ansible.builtin.fail:
    msg: "Nginx configuration is invalid"
  when: nginx_test.rc != 0

- name: Restart Nginx
  ansible.builtin.service:
    name: nginx
    state: restarted
  when: frontend_nginx_config.changed or graphql_nginx_config.changed or sso_nginx_config.changed
